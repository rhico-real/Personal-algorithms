NOTE: this program calculates the number of sundays from
      an initial date up to a chosen final date.
	For example, if the initial date is january 1 2014 and 
	the final date is january 1 2050, the program will 
	print how many sundays starting from the initial date
	up to the final date.

P.S. the program will just print from january 1 of each
	incrementing year. (i.e., january 1 2014, january 1 2015
	and so forth...)

Algorithm and program by: Rhico Abueme;

function floorOrCeiling(year){
  if(year%4==0){
    year=year/4;
  }
  else{
      year=year/4;
      year=Math.floor(year);
  }
  return year;
}

function yearCode(year){
  year=year%100;
  let addYToYear=floorOrCeiling(year);
  let yearCode=(year+addYToYear)%7;

  return(yearCode);
}
function monthCode(month){
  let months={'january':0,
  'february':3,
  'march':3,
  'april':6,
  'may':1,
  'june':4,
  'july':6,
  'august':2,
  'september':5,
  'october':0,
  'november':3,
  'december':5};

  return months[month];
}
function centuryCode(year){
  let initialCentury=1700;
  let interval=[4,2,0,6];

  year=year-(year%100);

  let finalCentury=(year-initialCentury)/100;

  while(finalCentury>=4){
    finalCentury-=4;
  }

  return interval[finalCentury];
}
function leapYearCode(month,year){
  if(year%4==0){
    if(month=='january' || month=='february'){
      return -1;
    }
    else{
      return 0;
    }
  }
  else{
    return 0;
  }
}

function isItSunday(month,day,year){
  let days=['sunday','monday','tuesday','wednesday','thursday','friday','saturday'];

  let result=(yearCode(year)+monthCode(month)+centuryCode(year)+day+leapYearCode(month,year))%7;

  while(result>=6){
    result-=6;
  }

  return days[result];
}

let initialYear=2014;
let finalYear=2050;

let howmanysundays=0;

for(i=initialYear;i<=finalYear;i++){
  let sunday=isItSunday('january',1,i);
    if(sunday=='sunday'){
      howmanysundays++;
      console.log(i);
    }
}

console.log(howmanysundays);
